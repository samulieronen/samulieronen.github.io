{"version":3,"sources":["components/Hashtag.js","assets/github_clicked.svg","components/ContentBox.js","App.js","reportWebVitals.js","index.js"],"names":["Hashtag","props","key","className","status","hashes","map","hash","ContentBox","id","content","name","onClick","console","log","dropdown","document","getElementById","style","display","repo","href","link","target","rel","backgroundImage","background","desc","longdesc","App","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.165beb95.chunk.js","sourcesContent":["import React from 'react'\n\nconst Hashtag = (props) => {\n\n    let key = 0;\n\n    return (\n        <div className=\"hashtag-wrapper\">\n            <p className={\n                /* Sorry for the stacked ternaries */\n                props.status === \"public\" ? \"hash green\" : props.status === \"in progress\" ? \"hash yellow\" : props.status === \"tba\" ? \"hash red\" : \"hash\"\n            }>{props.status}</p>\n            {props.hashes.map(hash => <p key={key++} className=\"hash\">{hash}</p>)}\n        </div>\n    );\n}\n\nexport default Hashtag","export default __webpack_public_path__ + \"static/media/github_clicked.ec036bd9.svg\";","import React from 'react'\nimport Hashtag from './Hashtag'\n\nimport background from \"../assets/github_clicked.svg\";\n\nconst ContentBox = (props) => {\n\n    return (\n        <div className=\"content-box\" id={props.content.name + \"-cbox\"} onClick={() => {\n            console.log('clekc at ' + props.content.name + \"-cbox :: showing dropdown\");\n            let dropdown = document.getElementById(props.content.name + '-dropdown');\n            dropdown.style.display === \"flex\" ? dropdown.style.display = \"none\" : dropdown.style.display = \"flex\";\n        }}>\n            <div className=\"project-textbox\">\n                <div className=\"project-header\"><div className={\n                    props.content.repo ? \"gitlink\" : \"gitlink none\"\n                } id={props.content.name + \"-gitlink\"}></div>\n                    <a href={props.content.link} target={\n                        props.content.link === \"#\" ? \"\" : \"_blank\"\n                    } rel=\"noreferrer\" onClick={() => {\n                        document.getElementById(props.content.name + \"-gitlink\").style.backgroundImage = `url(${background})`;\n                    }\n                    }><h2>{props.content.name}</h2></a>\n                </div>\n                <h3>{props.content.desc}</h3>\n                <div className=\"dropdown\" id={props.content.name + \"-dropdown\"}>\n                    {props.content.longdesc ? <p>{props.content.longdesc}</p> : \"\" }\n                </div>\n                <Hashtag hashes={props.content.hash} status={props.content.status}/>\n            </div>\n        </div>\n    );\n}\n\nexport default ContentBox","import { div } from 'prelude-ls';\nimport ContentBox from './components/ContentBox'\n\n\nfunction App() {\n\n    const projects = [\n        {\n            name: \"smart-home (undisclosed name)\",\n            desc: \"diy smart home infrastructure\",\n            longdesc: \"Not going to spoil it just yet!\",\n            hash: [\"smart home\", \"in design\"],\n            link: \"#\",\n            repo: false,\n            status: \"tba\"\n        },\n        {\n            name: \"fullstackopen\",\n            desc: \"learning full stack development\",\n            longdesc: \"\",\n            hash: [\"frontend\", \"backend\", \"js\", \"react\"],\n            link: \"https://github.com/samulieronen/fullstackopen_osa4\",\n            repo: true,\n            status: \"in progress\"\n        },\n        {\n            name: \"samulieronen.github.io\",\n            desc: \"this website acts as my playground for learning new front-end development related things\",\n            longdesc: \"\",\n            hash: [\"html\", \"scss\", \"js\", \"react\"],\n            link: \"https://github.com/samulieronen/samulieronen.github.io\",\n            repo: true,\n            status: \"public\"\n        },\n        {\n            name: \"corewar\",\n            desc: \"school project teaching how a cpu and compilers work\",\n            longdesc: \"This project is a replica of the computer game Core War, launched in 1984. We had to build our own assembler that compiles Assembly code into bytecode, and build a VM that lets Core Wars champion fight in an arena.\",\n            hash: [\"c\", \"cpu\", \"compilers\"],\n            link: \"https://github.com/avocadohooman/42-Corewar\",\n            repo: true,\n            status: \"public\"\n        },\n        {\n            name: \"lem-in\",\n            desc: \"school project teaching graph flow algortihms and data structures\",\n            longdesc: \"lem_in is a project focused on data structures and graph traversal algoritms. The goal of the project is to move n amount of ants from room start to end with the least amount of moves. Criteria is that the ants don't collide (only 1 ant in a room) and you may move ants once per turn.\",\n            hash: [\"c\", \"graph-flow\", \"algo\"],\n            link: \"https://github.com/samulieronen/42-lem_in\",\n            repo: true,\n            status: \"public\"\n        },\n        {\n            name: \"reaktor warehouse\",\n            desc: \"reaktor ss21 pre-assignment\",\n            longdesc: `For the api, I used Node.js and Express.js as I am most comfortable using them.\n                Frontend is made on top of create-react-app with React.js and datagrid made with react-table which was lightweight enough to handle all the data.\n                Implemented pagination as I had problems with exceeding the maximum call stack size when rendering all data in one go...\n                Availability is color coded for fast interpretation.\n                Backend refreshing data every 5mins by default`,\n            hash: [\"node\", \"frontend\", \"backend\", \"api\"],\n            link: \"https://github.com/samulieronen/reaktor_warehouse\",\n            repo: true,\n            status: \"public\"\n        },\n        {\n            name: \"bayesian classifier\",\n            desc: \"personal ml intro project\",\n            longdesc: \"Supervised machine learning model that determines if input is negative or positive based on a certain dataset it has been trained to.\",\n            hash: [\"python\", \"ml\", \"classifier\"],\n            link: \"https://github.com/samulieronen/bayesian_classifier\",\n            repo: true,\n            status: \"public\"\n        }\n    ]    \n\n    return (\n        <div>\n            <div className=\"box-wrapper\">\n                {projects.map((item) => <ContentBox key={item.name} content={item}/>)}\n            </div>\n            <div className=\"contact-wrapper\">\n                <h3 className=\"big\" id=\"contact-heading\">contact</h3>\n                <div className=\"contact-textbox\">\n                    <a href=\"https://github.com/samulieronen\" target=\"_blank\" rel=\"noreferrer\"><div className=\"svgcontainer github\"></div></a>\n                    <a href=\"https://www.linkedin.com/in/samulieronen/\" target=\"_blank\" rel=\"noreferrer\"><div className=\"svgcontainer linkedin\"></div></a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './scss/main.scss'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}