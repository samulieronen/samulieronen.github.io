(this["webpackJsonpsamulieronen.github.io"]=this["webpackJsonpsamulieronen.github.io"]||[]).push([[0],{15:function(e,t,n){},16:function(e,t,n){"use strict";n.r(t);var a=n(1),s=n.n(a),o=n(3),i=n.n(o),c=(n(8),n(0)),r=function(e){var t=0;return Object(c.jsxs)("div",{className:"hashtag-wrapper",children:[Object(c.jsx)("p",{className:"public"===e.status?"hash green":"in progress"===e.status?"hash yellow":"tba"===e.status?"hash red":"hash",children:e.status}),e.hashes.map((function(e){return Object(c.jsx)("p",{className:"hash",children:e},t++)}))]})},l=n.p+"static/media/github_clicked.ec036bd9.svg",d=function(e){return Object(c.jsx)("div",{className:"content-box",id:e.content.name+"-cbox",onClick:function(){console.log("clekc at "+e.content.name+"-cbox :: showing dropdown");var t=document.getElementById(e.content.name+"-dropdown");"flex"===t.style.display?t.style.display="none":t.style.display="flex"},children:Object(c.jsxs)("div",{className:"project-textbox",children:[Object(c.jsxs)("div",{className:"project-header",children:[Object(c.jsx)("div",{className:e.content.repo?"gitlink":"gitlink none",id:e.content.name+"-gitlink"}),Object(c.jsx)("a",{href:e.content.link,target:"#"===e.content.link?"":"_blank",rel:"noreferrer",onClick:function(){document.getElementById(e.content.name+"-gitlink").style.backgroundImage="url(".concat(l,")")},children:Object(c.jsx)("h2",{children:e.content.name})})]}),Object(c.jsx)("h3",{children:e.content.desc}),Object(c.jsx)("div",{className:"dropdown",id:e.content.name+"-dropdown",children:e.content.longdesc?Object(c.jsx)("p",{children:e.content.longdesc}):""}),Object(c.jsx)(r,{hashes:e.content.hash,status:e.content.status})]})})};var h=function(){return Object(c.jsxs)("div",{children:[Object(c.jsx)("div",{className:"box-wrapper",children:[{name:"smart-home (undisclosed name)",desc:"diy smart home infrastructure",longdesc:"Not going to spoil it just yet!",hash:["smart home","in design"],link:"#",repo:!1,status:"tba"},{name:"fullstackopen",desc:"learning full stack development",longdesc:"",hash:["frontend","backend","js","react"],link:"https://github.com/samulieronen/fullstackopen_osa4",repo:!0,status:"in progress"},{name:"samulieronen.github.io",desc:"this website acts as my playground for learning new front-end development related things",longdesc:"",hash:["html","scss","js","react"],link:"https://github.com/samulieronen/samulieronen.github.io",repo:!0,status:"public"},{name:"corewar",desc:"school project teaching how a cpu and compilers work",longdesc:"This project is a replica of the computer game Core War, launched in 1984. We had to build our own assembler that compiles Assembly code into bytecode, and build a VM that lets Core Wars champion fight in an arena.",hash:["c","cpu","compilers"],link:"https://github.com/avocadohooman/42-Corewar",repo:!0,status:"public"},{name:"lem-in",desc:"school project teaching graph flow algortihms and data structures",longdesc:"lem_in is a project focused on data structures and graph traversal algoritms. The goal of the project is to move n amount of ants from room start to end with the least amount of moves. Criteria is that the ants don't collide (only 1 ant in a room) and you may move ants once per turn.",hash:["c","graph-flow","algo"],link:"https://github.com/samulieronen/42-lem_in",repo:!0,status:"public"},{name:"reaktor warehouse",desc:"reaktor ss21 pre-assignment",longdesc:"For the api, I used Node.js and Express.js as I am most comfortable using them.\n                Frontend is made on top of create-react-app with React.js and datagrid made with react-table which was lightweight enough to handle all the data.\n                Implemented pagination as I had problems with exceeding the maximum call stack size when rendering all data in one go...\n                Availability is color coded for fast interpretation.\n                Backend refreshing data every 5mins by default",hash:["node","frontend","backend","api"],link:"https://github.com/samulieronen/reaktor_warehouse",repo:!0,status:"public"},{name:"bayesian classifier",desc:"personal ml intro project",longdesc:"Supervised machine learning model that determines if input is negative or positive based on a certain dataset it has been trained to.",hash:["python","ml","classifier"],link:"https://github.com/samulieronen/bayesian_classifier",repo:!0,status:"public"}].map((function(e){return Object(c.jsx)(d,{content:e},e.name)}))}),Object(c.jsxs)("div",{className:"contact-wrapper",children:[Object(c.jsx)("h3",{className:"big",id:"contact-heading",children:"contact"}),Object(c.jsxs)("div",{className:"contact-textbox",children:[Object(c.jsx)("a",{href:"https://github.com/samulieronen",target:"_blank",rel:"noreferrer",children:Object(c.jsx)("div",{className:"svgcontainer github"})}),Object(c.jsx)("a",{href:"https://www.linkedin.com/in/samulieronen/",target:"_blank",rel:"noreferrer",children:Object(c.jsx)("div",{className:"svgcontainer linkedin"})})]})]})]})},m=(n(15),function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,17)).then((function(t){var n=t.getCLS,a=t.getFID,s=t.getFCP,o=t.getLCP,i=t.getTTFB;n(e),a(e),s(e),o(e),i(e)}))});i.a.render(Object(c.jsx)(s.a.StrictMode,{children:Object(c.jsx)(h,{})}),document.getElementById("root")),m()}},[[16,1,2]]]);
//# sourceMappingURL=main.165beb95.chunk.js.map